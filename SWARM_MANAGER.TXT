	Термины:

	SWARM	- рой, совокупность CB и CL инстанций (узлов в сети)
	CB 	- Control Block
	CL	- Client 
	Id	- CL/CB Instance Id
	Metric	- метрика инстанции, своего рода рейтинг, приоритет, у primary = 0xFFffFFffUL


	В реализации сделаны следующие допущения:
	
	- может быть использован Multicast UDP;
	- протокол построен на уведомительной схеме, без обязательного квитирования;
	- вопросы взаимной аутентификации - вне рассмотрения;
	- использован линейный поиск по оперативно сопровождаемым таблицам;
	- вопросы деления роя и возможное образование роёв меньшего порядка - не рассматриваются;
	- в сети допускается сосуществование на коротком интервале PRIMARY и BACKUP мастеров;
	- обработка ошибочных ситуаций ровно в передалах минимально необходимой (а то и меньше) для реализации тестовго задания ;
	- в сети может быть только один PRIMARY MASTER - включение второго не распознаётся и не обрабатываеся текущей логикой;
	- вопросы целостности и консистентности пересылаемой информации - не рассматриваются;

	Общее описание алгоритмов
	
	Для взаимодействия CB и CL инстанций используются следующие типы PDU:
	- SWARM$K_REQ_UP - уведомляет о появлении новой инстанции CB/CL
	- SWARM$K_REQ_DATAREQ - уведомляет о необходимости инстанциям CL сформировать и послать увеломления с телеметрией
	- SWARM$K_REQ_PARAMS - уведомление от инстанции CL с вектором телеметрии
	- SWARM$K_REQ_SETDATA - уведомление от CB , содержащее параметры для инстанций CL
	
	В сети независимо могу существовать CB и CL инстанции (primary - в единственном экземпляре).
	- CB при старте генерирует Id и Metric
	- CB рассылает UP (+ ID + Metric) с определённым интервалом;
	- на каждой CB инстанции сопровождается своя таблица CB инстанций - по получении UP в таблицу добавляется запись или обновляется статус существующей;
	- на регулярной основе таблица CB сканируется для определения "протухших" записей - то есть, таких, которые не прислали UP 
	- для PRIMARY и BACKUP  - свои интервалы (см. конфигурационные параметры primatmo и cbtmo соответственно)
	- по результатам сканирования определяется "живая" запись с наивысшей metric
	- если это metric текущей инстанции - переключаем (если уже не сделано это) текущую инстанцию в активный режим
	- CB работает в активном режимо пока в сети не появиться CB инстанция с более высоким metric
	
	
	Функционирование CL
	- CL при старте генерирует Id
	- при получении уведомления DATAREQ формирует уведомление PARAMS с текущими значениями температуры и освещённости
	- при получении SETDATA - выводим полученный текст
	
	
	Приготовление исполняемых образов
	В каждом каталоге INDBLK и CTLBLK выполняем build.sh
	В нескольких терминальных сессиях запускаем ./indblk без параметров (по умолчанию адекватные)
	В нескольких терминальных сессиях запускаем ./ctlblk без параметров
	В одном терминальном окне запускаем ./ctlblk -primary
	
	Дальше гасим-запускаем инстанции по вкусу.
	
	Наборы допустимых паматеров есть в .CONF-файлах.